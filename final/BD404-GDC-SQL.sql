DROP TABLE CONDOMINIO CASCADE CONSTRAINT;
DROP TABLE FUNCIONARIO CASCADE CONSTRAINT;
DROP TABLE ASSUNTO CASCADE CONSTRAINT;
DROP TABLE QUOTASPAGAS CASCADE CONSTRAINT;
DROP TABLE SERVICOREALIZADO CASCADE CONSTRAINT;
DROP TABLE SERVICODISPONIVEL CASCADE CONSTRAINT;
DROP TABLE EMPRESA CASCADE CONSTRAINT;
DROP TABLE FORNECE CASCADE CONSTRAINT;
DROP TABLE RECIBOVENCIMENTO CASCADE CONSTRAINT;
DROP TABLE ASSEMBLEIA CASCADE CONSTRAINT;
DROP TABLE PESSOA CASCADE CONSTRAINT;
DROP TABLE PRESENCA CASCADE CONSTRAINT;
DROP TABLE TRABALHA CASCADE CONSTRAINT;
DROP TABLE MORADORDONO CASCADE CONSTRAINT;
DROP TABLE PROPRIEDADE CASCADE CONSTRAINT;
DROP SEQUENCE CREATE_ID;

CREATE TABLE CONDOMINIO
(   CODIGO VARCHAR2(5),
    IBAN VARCHAR2(25) NOT NULL,
    NIFC NUMBER(9,0) CHECK (NIFC >= 100000000) NOT NULL,
    ENDERECO VARCHAR2(150) NOT NULL,
    NUMEROUNI NUMBER(2,0) NOT NULL,
    PRIMARY KEY(CODIGO),
    UNIQUE (IBAN, NIFC)
);



CREATE TABLE SERVICODISPONIVEL
(    NOMES VARCHAR2 (30),
     PRIMARY KEY (NOMES)
);

CREATE TABLE EMPRESA
(    NOMEE VARCHAR2 (30),
     NUMTELEFONE NUMBER(9,0),
     PRIMARY KEY (NOMEE)
);

CREATE TABLE PESSOA
(    NIF NUMBER(9,0),
     NOME VARCHAR2(150) NOT NULL,
     EMAIL VARCHAR2(75),
     NUMEROTEL NUMBER(9,0) CHECK (NUMEROTEL >=900000000),
     PRIMARY KEY (NIF),
     UNIQUE (EMAIL, NUMEROTEL)   
);

CREATE TABLE PROPRIEDADE(
    ANDAR NUMBER(2,0),
    PORTA VARCHAR2(1),
    CODIGO VARCHAR2(5),
    PERMILAGEM NUMBER(4, 0) NOT NULL CHECK  (PERMILAGEM < 1000),
    NUMEROQUARTOS NUMBER(2, 0) NOT NULL,
    PRIMARY KEY (ANDAR, PORTA, CODIGO),
    FOREIGN KEY (CODIGO) REFERENCES CONDOMINIO (CODIGO)
);

CREATE TABLE MORADORDONO
(    NIF NUMBER(9,0),
     DATAENTRADA DATE NOT NULL,
     DATASAIDA DATE,
     ANDAR NUMBER(2,0),
     PORTA VARCHAR2(1),
     CODIGO VARCHAR2(5),
     PRIMARY KEY (NIF),
     FOREIGN KEY (NIF) REFERENCES PESSOA (NIF),
     FOREIGN KEY(ANDAR, PORTA, CODIGO) REFERENCES PROPRIEDADE(ANDAR, PORTA, CODIGO)
);

CREATE TABLE FUNCIONARIO
(    NIF NUMBER(9,0),
     FUNCAO VARCHAR2(25) NOT NULL,
     DATAENTRADA DATE NOT NULL,
     DATASAIDA DATE,
     SALARIO NUMBER(7,2) NOT NULL CHECK (SALARIO >= 760),
     PRIMARY KEY (NIF),
     FOREIGN KEY (NIF) REFERENCES PESSOA (NIF)
);

CREATE TABLE QUOTASPAGAS
(    PERIODO VARCHAR2(9),
     CODIGO VARCHAR2(5),
     ANDAR NUMBER(2,0),
     PORTA VARCHAR2(1),
     VALOR NUMBER(6,2) NOT NULL,
     PRIMARY KEY (PERIODO, ANDAR, PORTA, CODIGO),
     FOREIGN KEY (ANDAR, PORTA, CODIGO) REFERENCES PROPRIEDADE (ANDAR, PORTA, CODIGO)
);

CREATE TABLE FORNECE
(    NOMES VARCHAR2(30),
     NOMEE VARCHAR2(30),
     PRIMARY KEY (NOMES, NOMEE),
     FOREIGN KEY (NOMES) REFERENCES SERVICODISPONIVEL (NOMES),
     FOREIGN KEY (NOMEE) REFERENCES EMPRESA (NOMEE)     
);

CREATE TABLE SERVICOREALIZADO
(    DATA DATE,
     NOMES VARCHAR2(30),
     CODIGO VARCHAR2(5),
     NOMEE VARCHAR2(30),
     PRECO NUMBER(6,2),
     OBSERVACAO VARCHAR2(100),
     PRIMARY KEY (DATA, NOMES, CODIGO, NOMEE),
     FOREIGN KEY (CODIGO) REFERENCES CONDOMINIO (CODIGO),
     FOREIGN KEY (NOMES,NOMEE) REFERENCES FORNECE (NOMES,NOMEE)     
);


CREATE TABLE RECIBOVENCIMENTO
(    DATAR DATE,
     NIF NUMBER(9,0),
     VALOR NUMBER(7,2),
     PRIMARY KEY (DATAR, NIF),
     FOREIGN KEY (NIF) REFERENCES FUNCIONARIO (NIF)
);

CREATE TABLE ASSEMBLEIA
(    HORADATA TIMESTAMP,
     CODIGO VARCHAR2(5),
     LOCAL VARCHAR2(20),
     PRIMARY KEY (HORADATA, CODIGO),
     FOREIGN KEY (CODIGO) REFERENCES CONDOMINIO (CODIGO)
);


CREATE TABLE ASSUNTO
(    NOME VARCHAR2(20) NOT NULL,
     ID NUMBER (6),
     VOTACAO NUMBER(3) NOT NULL,
     HORADATA TIMESTAMP NOT NULL,
     CODIGO VARCHAR2(5) NOT NULL,   
     PRIMARY KEY (ID),
     FOREIGN KEY (HORADATA, CODIGO) REFERENCES ASSEMBLEIA (HORADATA, CODIGO)
     
);



CREATE TABLE PRESENCA
(    NIF NUMBER(9,0),
     HORADATA TIMESTAMP,
     CODIGO VARCHAR2(5),
     PRIMARY KEY (NIF, HORADATA, CODIGO),
     FOREIGN KEY (NIF) REFERENCES MORADORDONO (NIF),
     FOREIGN KEY (HORADATA, CODIGO) REFERENCES ASSEMBLEIA (HORADATA, CODIGO)
);

CREATE TABLE TRABALHA
(    CODIGO VARCHAR2(5),
     NIF NUMBER(9,0),
     CONSTRAINT PK_TRA PRIMARY KEY (CODIGO, NIF),
     FOREIGN KEY (NIF) REFERENCES FUNCIONARIO (NIF),
     FOREIGN KEY (CODIGO) REFERENCES CONDOMINIO (CODIGO)
);


--CREATE TABLE DISCUTE
--(    ID NUMBER(6),
  --   HORADATA TIMESTAMP,
    -- CODIGO VARCHAR2(5),
     --PRIMARY KEY (ID, HORADATA, CODIGO),
     --FOREIGN KEY (ID) REFERENCES ASSUNTO (ID),
     --FOREIGN KEY (HORADATA, CODIGO) REFERENCES ASSEMBLEIA (HORADATA, CODIGO)
--);


 CREATE SEQUENCE   "CREATE_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1
/





CREATE OR REPLACE FORCE EDITIONABLE VIEW  "SERVICOS" ("DATA", "NOMEE", "NOMES") AS 
  select data, empresa.nomee, servicorealizado.nomes
from empresa, servicodisponivel, servicorealizado
where servicorealizado.nomee = empresa.nomee
/


CREATE OR REPLACE FORCE EDITIONABLE VIEW  "RENDIMENTOTOTALPROP" ("CODIGO", "TOTAL_REVENUE") AS 
  SELECT codigo, nvl(SUM(valor),0)
FROM quotaspagas
GROUP BY codigo
/






CREATE OR REPLACE FORCE EDITIONABLE VIEW  "NOMEDOFUNCIONARIO" ("NOME", "NIF") AS 
  select nome, funcionario.nif
FROM pessoa, funcionario
where pessoa.nif = funcionario.nif
/


CREATE OR REPLACE FORCE EDITIONABLE VIEW  "NAMEMORADOR" ("NOME", "EMAIL", "NIF", "NUMEROTEL", "DATAENTRADA", "DATASAIDA", "ANDAR", "PORTA", "CODIGO") AS 
  select nome, email, moradordono.nif, numerotel, dataentrada, datasaida,propriedade.andar,propriedade.porta, condominio.codigo
from pessoa, moradordono, propriedade, condominio
where pessoa.nif = moradordono.nif and moradordono.codigo = propriedade.codigo
and propriedade.codigo = condominio.codigo and moradordono.andar = propriedade.andar and
moradordono.porta = propriedade.porta
/


CREATE OR REPLACE FORCE EDITIONABLE VIEW  "NAMEFUNC" ("NOME", "NIF", "EMAIL", "NUMEROTEL", "FUNCAO", "SALARIO", "DATAENTRADA", "DATASAIDA", "CODIGO") AS 
  select nome, funcionario.nif, email, numerotel, funcao, salario, dataentrada, datasaida, trabalha.codigo
FROM pessoa, funcionario, trabalha
where pessoa.nif = funcionario.nif and trabalha.nif = funcionario.nif
/


CREATE OR REPLACE FORCE EDITIONABLE VIEW  "FUNRECEBNOME" ("NIF", "VALOR") AS 
  select namefunc.NIF, sum(valor)
from recibovencimento, namefunc
where namefunc.nif = recibovencimento.nif
group by namefunc.NIF
/




CREATE OR REPLACE FORCE EDITIONABLE VIEW  "DESPESA_FUNC" ("CODIGO", "TOTAL_FUN") AS 
  SELECT CONDOMINIO.CODIGO, nvl(SUM(FUNRECEBNOME.VALOR),0)
FROM CONDOMINIO, TRABALHA, FUNCIONARIO, FUNRECEBNOME
WHERE CONDOMINIO.CODIGO = TRABALHA.CODIGO AND FUNRECEBNOME.NIF = FUNCIONARIO.NIF AND FUNCIONARIO.NIF = TRABALHA.NIF
GROUP BY CONDOMINIO.CODIGO
/


CREATE OR REPLACE FORCE EDITIONABLE VIEW  "DESPESAS_SERVICOS" ("CODIGO", "TOTAL_PRECO") AS 
  SELECT CODIGO, nvl(SUM(PRECO),0) AS TOTAL_PRECO
FROM SERVICOREALIZADO
GROUP BY CODIGO
/

CREATE OR REPLACE FORCE EDITIONABLE VIEW  "FUNCSEMRECIBO" ("NIF") AS 
  select nif from funcionario
minus
select nif from recibovencimento
/


create or replace FUNCTION PROPRIEDADE_COUNT(VCODE VARCHAR2)  
    RETURN NUMBER 
    IS  
        PROPRIEDADE_COUNT NUMBER; 
    BEGIN     
        SELECT COUNT(*) INTO PROPRIEDADE_COUNT 
        FROM PROPRIEDADE 
        WHERE CODIGO = VCODE; 
         
        RETURN PROPRIEDADE_COUNT; 
    END; 
    
/


create or replace FUNCTION SUM_PERMILAGEM(VCODE VARCHAR2)  
    RETURN NUMBER 
    IS 
        PROPRIEDADE_SUM NUMBER; 
    BEGIN 
        SELECT SUM(PERMILAGEM) INTO PROPRIEDADE_SUM 
        FROM PROPRIEDADE 
        WHERE CODIGO = VCODE; 
         
        RETURN PROPRIEDADE_SUM; 
    END;

/

create or replace FUNCTION verificarEstadoAssunto
RETURN VARCHAR2
IS
  vResultado VARCHAR2(15);
  vRandomNumber NUMBER;
BEGIN
  vRandomNumber := FLOOR(DBMS_RANDOM.VALUE(0, 3));
  CASE vRandomNumber
    WHEN 0 THEN
      vResultado := 'Reprovado';
    WHEN 1 THEN
      vResultado := 'Aprovado';
    WHEN 2 THEN
      vResultado := 'Em Discussão';
  END CASE;
  RETURN vResultado;
END;


/


CREATE OR REPLACE EDITIONABLE TRIGGER  "ADICIONAFUNCIONARIO" 
INSTEAD OF INSERT ON NAMEFUNC
FOR EACH ROW
BEGIN
INSERT INTO PESSOA (NIF, NOME, EMAIL, NUMEROTEL) VALUES (:NEW.NIF, :NEW.NOME, :NEW.EMAIL, :NEW.NUMEROTEL);
INSERT INTO FUNCIONARIO (NIF, FUNCAO, DATAENTRADA, DATASAIDA, SALARIO) VALUES (:NEW.NIF, :NEW.FUNCAO, :NEW.DATAENTRADA, :NEW.DATASAIDA, :NEW.SALARIO);
INSERT INTO TRABALHA (CODIGO, NIF) VALUES (:NEW.CODIGO, :NEW.NIF);
END;

/
ALTER TRIGGER  "ADICIONAFUNCIONARIO" ENABLE
/

CREATE OR REPLACE EDITIONABLE TRIGGER  "ADICIONAMORADOR" 
INSTEAD OF INSERT ON NAMEMORADOR
FOR EACH ROW
BEGIN
INSERT INTO PESSOA (NIF, NOME, EMAIL, NUMEROTEL) VALUES (:NEW.NIF, :NEW.NOME, :NEW.EMAIL, :NEW.NUMEROTEL);
INSERT INTO MORADORDONO (NIF, DATAENTRADA, DATASAIDA, ANDAR, PORTA, CODIGO) VALUES (:NEW.NIF, :NEW.DATAENTRADA, :NEW.DATASAIDA, :NEW.ANDAR, :NEW.PORTA, :NEW.CODIGO);
END;

/
ALTER TRIGGER  "ADICIONAMORADOR" ENABLE
/

CREATE OR REPLACE EDITIONABLE TRIGGER  "ID" 
BEFORE INSERT ON ASSUNTO 
FOR EACH ROW 
DECLARE 
    id number; 
BEGIN 
    SELECT create_id.nextval 
        INTO id 
        FROM dual; 
    :new.id := id; 
END; 
 

/
ALTER TRIGGER  "ID" ENABLE
/

CREATE OR REPLACE EDITIONABLE TRIGGER  "LIMITEPROP" 
BEFORE INSERT ON propriedade
FOR EACH ROW
DECLARE
  nprop NUMBER;
  numero_unitotal NUMBER;
BEGIN
  nprop := propriedade_count(:new.codigo);
  SELECT numerouni INTO numero_unitotal
  FROM condominio
  WHERE codigo = :new.codigo;
  
  IF nprop = numero_unitotal THEN
    RAISE_APPLICATION_ERROR(-20100, 'O limite de propriedades no condomínio foi atingido.');
  END IF;
END;

/
ALTER TRIGGER  "LIMITEPROP" ENABLE
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "RECEBFUN" 
BEFORE INSERT ON RECIBOVENCIMENTO 
FOR EACH ROW 
DECLARE 
  valorR number; 
  month number;
BEGIN 
  SELECT EXTRACT(MONTH FROM :new.datar) INTO month FROM DUAL;
  SELECT salario INTO valorR 
  FROM funcionario 
  WHERE nif = :new.nif;
  IF month = 6 OR month = 12 THEN
  :new.valor := 2 * valorR; 
  ELSE
  :new.valor := valorR; 
  END IF;
END; 
 

/
ALTER TRIGGER  "RECEBFUN" ENABLE
/



CREATE OR REPLACE EDITIONABLE TRIGGER  "VERIFICA_PERMILAGEM" 
    BEFORE INSERT ON PROPRIEDADE 
    FOR EACH ROW 
    DECLARE 
        TOTAL_PERMILAGEM NUMBER(4,0); 
        NPROPRIEDADE NUMBER(2,0); 
        NUMEROUNI_CONDOMINIO NUMBER(2,0); 
    BEGIN 
        NPROPRIEDADE := PROPRIEDADE_COUNT(:NEW.CODIGO); 
        TOTAL_PERMILAGEM := SUM_PERMILAGEM(:NEW.CODIGO) + :NEW.PERMILAGEM; 
        SELECT NUMEROUNI INTO NUMEROUNI_CONDOMINIO 
        FROM CONDOMINIO 
        WHERE CODIGO = :NEW.CODIGO; 
        IF NPROPRIEDADE = NUMEROUNI_CONDOMINIO - 1 AND TOTAL_PERMILAGEM <> 1000 THEN 
            DECLARE 
                FATOR NUMBER; 
            BEGIN 
                FATOR := 1000/TOTAL_PERMILAGEM; 
                UPDATE PROPRIEDADE 
                SET PERMILAGEM = PERMILAGEM * FATOR 
                WHERE CODIGO = :NEW.CODIGO; 
                :NEW.PERMILAGEM := :NEW.PERMILAGEM * FATOR;
            END; 
        END IF; 
    END;       

/
ALTER TRIGGER  "VERIFICA_PERMILAGEM" ENABLE
/

create or replace TRIGGER REMOVEFUNCIONARIO
BEFORE DELETE ON PESSOA
FOR EACH ROW
BEGIN
    DELETE FROM TRABALHA where nif = :old.nif;
    DELETE FROM FUNCIONARIO where nif = :old.nif;
    DELETE FROM RECIBOVENCIMENTO where nif = :old.nif;
END;

/

insert into CONDOMINIO values('AL123', 'PT50000700620000000000001', 500000000, 'Avenida da Liberdade, porta 123', 4);
insert into CONDOMINIO values ('RF456', 'PT50000700620000000000002', 500000004, 'Rua das Flores, porta 456', 2);
insert into CONDOMINIO values ('AC789', 'PT50000700620000000000007', 510510510, 'Avenida Central, porta 789', 4);
insert into CONDOMINIO values ('RAP12', 'PT50000700620000000000003', 700000000, 'Rua Augusto Pereira, lote 12', 3);
insert into PROPRIEDADE values (1, 'E', 'AL123', 400, 3);
insert into PROPRIEDADE values (1, 'D', 'AL123', 500, 2);
insert into PROPRIEDADE values (2, 'E', 'AL123', 100, 3);
insert into PROPRIEDADE values (2, 'D', 'AL123', 100, 3);
insert into PROPRIEDADE values (1, 'E', 'RF456', 400, 5);
insert into PROPRIEDADE values (1, 'D', 'RF456', 500, 5);
insert into PROPRIEDADE values (1, 'A', 'AC789', 900, 1);
insert into PROPRIEDADE values (1, 'B', 'AC789', 100, 1);
insert into PROPRIEDADE values (1, 'C', 'AC789', 400, 1);
insert into PROPRIEDADE values (1, 'D', 'AC789', 500, 2);
insert into PROPRIEDADE values (1, 'A', 'RAP12', 400, 6);
insert into PROPRIEDADE values (2, 'A', 'RAP12', 500, 7);
insert into PROPRIEDADE values (3, 'A', 'RAP12', 100, 1);
insert into EMPRESA values('Limpezas lda', 919933939);
insert into EMPRESA values('BIGR lda', 910000393);
insert into EMPRESA values('Lampadas e LEDs Empresa', 210055395);
insert into SERVICODISPONIVEL values ('Limpeza');
insert into SERVICODISPONIVEL values ('Mudança de lampadas');
insert into SERVICODISPONIVEL values ('Inserção de leds nas paredes');
insert into SERVICODISPONIVEL values ('Pintura do prédio');
insert into SERVICODISPONIVEL values ('Construção de telhado');
